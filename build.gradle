plugins {
    id 'java-library'
    id("io.freefair.lombok") version "8.7.1"
}

wrapper {
    gradleVersion("8.7")
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

dependencies {
    //Selenide
    api libs.com.codeborne.selenide

    //WebDriverManager
    api libs.io.github.bonigarcia.webdrivermanager

    //Assertj
    implementation libs.org.assertj.assertj.core

    //RestAssured
    implementation libs.io.rest.assured
    implementation libs.io.rest.assured.json.schema.validator

    //Log4j 2
    testImplementation libs.org.apache.logging.log4j
    testImplementation libs.org.apache.logging.log4j.api

    //Junit5
    testImplementation libs.org.junit.jupiter.junit.jupiter.api
    testImplementation libs.org.junit.jupiter.junit.jupiter.params
    testImplementation libs.org.junit.jupiter.engine

    //Jackson
    testImplementation libs.com.fasterxml.jackson.core

    //Allure
    testImplementation libs.io.qameta.allure.bom
    testImplementation libs.io.qameta.allure.junit5
    implementation libs.io.qameta.allure.rest.assured

    agent libs.org.aspectj.aspectjweaver
}

group = 'com.epam'
version = '1.0-SNAPSHOT'
description = 'Pet project to practice automation testing skills in Java'
java.sourceCompatibility = JavaVersion.VERSION_17

tasks.register('cleanTestResultsFromPreviousRuns', Delete) {
    delete 'build/test-results', 'allure-results'
}

test {
    dependsOn cleanTestResultsFromPreviousRuns
    systemProperties System.getProperties()

    useJUnitPlatform {
        if (project.hasProperty('tags')) {
            String[] testTags = project.tags.split(',')
            includeTags(*testTags)
        } else {
            includeTags("P1")
        }
    }

    jvmArgs = [ "-javaagent:${configurations.agent.singleFile}" ]
}